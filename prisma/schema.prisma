generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  name             String?
  email            String?   @unique
  emailVerified    DateTime?
  password         String?
  stripeCustomerId String?   @unique
  role             UserRole
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

enum UserRole {
  ADMIN
  USER
}

model EmailTemplate {
  id          String  @id @map("_id")
  name        String
  code        String?
  description String?
  key         String?
}

model SchoolClass {
  id          String            @id @default(uuid()) @map("_id")
  name        String
  slug        String
  description String?
  createdAt   DateTime          @default(now())
  status      SchoolClassStatus

  tutorials SchoolTutorial[] @relation
}

enum SchoolClassStatus {
  ACTIVE
  DRAFT
}

model Subscription {
  id             String             @id @default(uuid()) @map("_id")
  name           String
  originalPrice  Float              @map("original_price")
  sellingPrice   Float?             @map("selling_price")
  description    String?
  durationInDays Int?
  status         SubscriptionStatus
  createdAt      DateTime           @default(now())
}

enum SubscriptionStatus {
  ACTIVE
  DRAFT
}

model SchoolTutorial {
  id        String         @id @default(uuid()) @map("_id")
  name      String
  slug      String
  status    TutorialStatus
  createdAt DateTime       @default(now())

  schoolClassId String
  schoolClass   SchoolClass @relation(fields: [schoolClassId], references: [id], onDelete: Cascade)
}

enum TutorialStatus {
  ACTIVE
  DRAFT
}
